// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// generator client {
//   provider        = "prisma-client-js"
//   previewFeatures = ["clientExtensions"]
// }

// datasource db {
//   provider = "sqlite"
//   url      = "file:./dev.db"
// }

// model User {
//   id    Int    @id @default(autoincrement())
//   email String @unique
//   name  String

//   posts Post[]
// }

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime
//   title     String
//   content   String?
//   published Boolean  @default(false)

//   author   User @relation(fields: [authorId], references: [id])
//   authorId Int
// }


// example/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  role      String    @default("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  posts     Post[]
  comments  Comment[]
}

model Post {
  id              String    @id @default(uuid())
  title           String
  content         String
  published       Boolean   @default(false)
  authorId        String
  author          User      @relation(fields: [authorId], references: [id])
  authorDepartment String?  
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  comments        Comment[]
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  postId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Log {
  id        String   @id @default(uuid())
  message   String
  level     String
  createdAt DateTime @default(now())
}
